{"version":3,"file":"static/js/856.068e780b.chunk.js","mappings":"gQAGaA,EAAYC,EAAAA,GAAAA,EAAH,8BAITC,EAAWD,EAAAA,GAAAA,GAAH,+CAIRE,EAAWF,EAAAA,GAAAA,GAAH,8HAORG,EAAYH,EAAAA,GAAAA,IAAH,8BAITI,EAAYJ,EAAAA,GAAAA,IAAH,0BAITK,EAAmBL,EAAAA,GAAAA,EAAH,8BAIhBM,EAAkBN,EAAAA,GAAAA,EAAH,8B,SC6B5B,EA7Ca,WACT,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GAASO,KAAKH,GAASI,MAAMC,QAAQC,IACpD,GAAE,CAACV,IAECG,EAAL,CAIA,IAAMQ,EAAgBR,EAAKS,MAAM,EAAG,IACpC,OAAgC,IAAzBD,EAAcE,QACjB,SAACrB,EAAD,0CAEE,SAACE,EAAD,UACGiB,EAAcG,KACb,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,QAA3C,OACE,UAACvB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEsB,IACEJ,EAAY,yCAC0BA,GAD1B,+EAIdK,IAAKH,OAGT,4BACE,UAACnB,EAAD,qBACQ,SAACC,EAAD,UAAkBiB,QAE1B,UAAClB,EAAD,yBACY,SAACC,EAAD,UAAkBkB,YAhBnBC,EADjB,KART,CAiCE,C","sources":["components/Cast/Cast-styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const ErrorText = styled.p`\n    \n`;\n\nexport const CastList = styled.ul`\n    list-style: none;\n`;\n\nexport const CastItem = styled.li`\n    margin-bottom: 30px;\n    background-color: #00ccff;\n    width: 400px;\n    text-align: center;\n`;\n\nexport const CastThumb = styled.div`\n    \n`;\n\nexport const CastImage = styled.img`\n\n`;\n\nexport const DescriptionLable = styled.p`\n    \n`;\n\nexport const DescriptionText = styled.p`\n    \n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieCasts } from \"utils/API\";\nimport { ErrorText,\n    CastList,\n    CastItem,\n    CastThumb,\n    CastImage,\n    DescriptionLable,\n    DescriptionText,\n} from \"./Cast-styled\";\n\n\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n  \n    useEffect(() => {\n      getMovieCasts(movieId).then(setCast).catch(console.log);\n    }, [movieId]);\n  \n    if (!cast) {\n        return;\n    }\n\n    const firstCastPast = cast.slice(0, 20);\n    return firstCastPast.length === 0 ? (\n        <ErrorText>Sorry but ve haven't casts</ErrorText>\n        ) : (\n          <CastList>\n            {firstCastPast.map(\n              ({ profile_path, original_name, character, cast_id }) => (\n                <CastItem key={cast_id}>\n                  <CastThumb>\n                    <CastImage\n                      src={\n                        profile_path\n                          ? `https://image.tmdb.org/t/p/w400${profile_path}`\n                          : `https://www.thermaxglobal.com/wp-content/uploads/2020/05/image-not-found.jpg`\n                      }\n                      alt={character}\n                    />\n                  </CastThumb>\n                  <div>\n                    <DescriptionLable>\n                      Name: <DescriptionText>{original_name}</DescriptionText>\n                    </DescriptionLable>\n                    <DescriptionLable>\n                      Character:<DescriptionText>{character}</DescriptionText>\n                    </DescriptionLable>\n                  </div>\n                </CastItem>\n              )\n            )}\n          </CastList>\n        );\n      };\n    \nexport default Cast;"],"names":["ErrorText","styled","CastList","CastItem","CastThumb","CastImage","DescriptionLable","DescriptionText","movieId","useParams","useState","cast","setCast","useEffect","getMovieCasts","then","catch","console","log","firstCastPast","slice","length","map","profile_path","original_name","character","cast_id","src","alt"],"sourceRoot":""}